{"version":3,"sources":["../../iamchrisep/src/App.tsx","../../iamchrisep/src/reportWebVitals.js","../../iamchrisep/src/index.tsx"],"names":["App","svg","createAvatar","style","seed","width","height","radius","earrings","earringColor","earringsProbability","eyebrows","eyebrowColor","eyes","mouth","nose","shirt","shirtColor","hair","hairColor","className","options","strings","autoStart","loop","dangerouslySetInnerHTML","__html","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA4CeA,MAvCf,WACI,IAAMC,EAAMC,uBAAaC,EAAO,CAC5BC,KAAM,OACNC,MAAO,IACPC,OAAQ,IACRC,OAAQ,EACRC,SAAU,CAAC,QACXC,aAAc,CAAC,SACfC,oBAAqB,IACrBC,SAAU,CAAC,MACXC,aAAc,CAAC,SACfC,KAAM,CAAC,WACPC,MAAO,CAAC,SACRC,KAAM,CAAC,SACPC,MAAO,CAAC,QACRC,WAAY,CAAC,SACbC,KAAM,CAAC,QACPC,UAAW,CAAC,WAGhB,OACI,qBAAKC,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,cAAC,IAAD,CACIC,QAAS,CACLC,QAAS,CAAC,QAAS,SACnBC,WAAW,EACXC,MAAM,KAGd,qBACIJ,UAAU,aACVK,wBAAyB,CAAEC,OAAQzB,WCzBxC0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ead2d906.chunk.js","sourcesContent":["import './App.css';\nimport Typewriter from 'typewriter-effect';\nimport { createAvatar } from '@dicebear/avatars';\nimport * as style from '@dicebear/micah';\n\nfunction App() {\n    const svg = createAvatar(style, {\n        seed: 'seed',\n        width: 196,\n        height: 196,\n        radius: 0,\n        earrings: ['hoop'],\n        earringColor: ['black'],\n        earringsProbability: 100,\n        eyebrows: ['up'],\n        eyebrowColor: ['coast'],\n        eyes: ['smiling'],\n        mouth: ['smile'],\n        nose: ['curve'],\n        shirt: ['open'],\n        shirtColor: ['black'],\n        hair: ['full'],\n        hairColor: ['coast'],\n    });\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <Typewriter\n                    options={{\n                        strings: ['Hello', 'World'],\n                        autoStart: true,\n                        loop: true,\n                    }}\n                />\n                <div\n                    className=\"App-avatar\"\n                    dangerouslySetInnerHTML={{ __html: svg }}\n                />\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}